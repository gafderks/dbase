version: "3.8"

volumes:
  postgresql-data:
  media-data:


services:
  nginx:
    build:
      context: .
      target: nginx
    ports:
      - 80:80
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:80/" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    labels:
      kompose.service.type: LoadBalancer
    volumes:
      - media-data:/opt/services/dbase/media:ro
    depends_on:
      - web
    networks:
      - backend-network
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 30MB
  database:
    image: postgres:15.2
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    restart: always
    env_file:
      - .env
    networks:
      - backend-network
    shm_size: 256mb
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 1m30s
    expose:
      - 5432
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 30MB
  web:
    build:
      context: .
      target: runtime
    command: gunicorn --bind 0.0.0.0:8000 --timeout 120 --workers 2 dbase.wsgi
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000" ]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s
    depends_on:
      - database
      - memcached
    env_file:
      - .env
    expose:
      - 8000
    volumes:
      - media-data:/app/media
    networks:
      - backend-network
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 250M
  memcached:
    image: memcached:1.6
    expose:
      - 11211
    networks:
      - backend-network
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 100M

networks:
  backend-network:
    driver: bridge
